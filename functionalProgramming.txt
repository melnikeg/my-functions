var arrNum = () => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
var log = (result) => console.log(result)

var fnFilter = arr => arr.filter (x => x>5)

var compose = fns => val => fns.reduce( (fn1, fn2) => fn2(fn1), val )

var composed = compose([ arrNum, fnFilter, log ])

composed();

Exemples from https://developer.mozilla.org/ru/docs/Glossary/Callback_function

async function pageLoader(callback) {
	var data = await fetch ('/ru/docs/Glossary/Callback_function')
	callback(data)
}

function onPageLoadingFinished(pageData) {
	console.log('Page was sucessfully loaded!')
	console.log('Response:')
	console.log(pageData)
}

pageLoader(onPageLoadingFinished)

function pow(x, n) {
	if (n == 1) {
		return x;
	} else {
		return x * pow(x, n - 1);
	}
}
console.log(pow(2, 3));